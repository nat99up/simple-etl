version: "3.9"

networks:
  app-tier:
    driver: bridge

x-kafka-common: &kafka-common
  image: 'bitnami/kafka:latest'
  ports:
    - "9092"
  networks:
    - app-tier
  healthcheck:
    test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/9092; exit $$?;'"
    interval: 5s
    timeout: 10s
    retries: 3
    start_period: 30s
  restart: unless-stopped

x-kafka-env-common: &kafka-env-common
  ALLOW_PLAINTEXT_LISTENER: 'yes'
  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: 'true'
  KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka-0:9093,1@kafka-1:9093
  KAFKA_KRAFT_CLUSTER_ID: abcdefghijklmnopqrstuv
  KAFKA_CFG_PROCESS_ROLES: controller,broker
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
  EXTRA_ARGS: "-Xms128m -Xmx256m"

services:
  kafka-0:
    <<: *kafka-common
    environment:
      <<: *kafka-env-common
      KAFKA_CFG_NODE_ID: 0
    # volumes:
    #   - kafka_0_data:/bitnami/kafka

  kafka-1:
    <<: *kafka-common
    environment:
      <<: *kafka-env-common
      KAFKA_CFG_NODE_ID: 1
    # volumes:
    #   - kafka_1_data:/bitnami/kafka

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    volumes:
      - ./kafka/kafka-ui-config.yaml:/etc/kafkaui/dynamic_config.yaml
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    depends_on:
      - kafka-0
      - kafka-1
    networks:
      - app-tier
    ports:
      - '8080:8080'
    healthcheck:
      test: wget --no-verbose --tries=1 --spider localhost:8080 || exit 1
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 30s

  postgres:
    container_name: postgres
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./dump/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-tier
    ports:
      - "5432:5432"
    # healthcheck:
    #   test: ["CMD", "pg_isready", "-U", "airflow"]
    #   interval: 10s
    #   retries: 5
    #   start_period: 5s
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - ./dump/servers.json:/pgadmin4/servers.json
    networks:
      - app-tier
    depends_on:
      - postgres
    ports:
      - "5050:80"

  redis:
    image: redis:latest
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always
    networks:
      - app-tier
    ports:
      - "6379:6379"

  simple-server:
    container_name: simple-server
    build: ./simple-server
    depends_on:
      - kafka-0
      - kafka-1
    networks:
      - app-tier
    ports:
      - "8888:8888"

  airflow-init:
    container_name: airflow-init
    extends:
      file:  ./airflow/docker-compose.yaml
      service: airflow-init
    networks:
      - app-tier
    depends_on:
      - postgres
      - redis

  airflow-webserver:
    container_name: airflow-webserver
    extends:
      file:  ./airflow/docker-compose.yaml
      service: airflow-webserver
    networks:
      - app-tier
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    container_name: airflow-scheduler
    extends:
      file:  ./airflow/docker-compose.yaml
      service: airflow-scheduler
    networks:
      - app-tier
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-worker:
    container_name: airflow-worker
    extends:
      file:  ./airflow/docker-compose.yaml
      service: airflow-worker
    networks:
      - app-tier
    depends_on:
      airflow-init:
        condition: service_completed_successfully

# volumes:
#   kafka_0_data:
#     driver: local
#   kafka_1_data:
#     driver: local